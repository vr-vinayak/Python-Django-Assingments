Date: Thu, 25 May 2023 13:11:08 +0000 (UTC)
Message-ID: <1984259785.27.1685020268807@c482d513bbfe>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_26_1403884281.1685020268807"

------=_Part_26_1403884281.1685020268807
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>Assignments - Python and Django Developer 1 year</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        table {
            border: solid 1px;
            border-collapse: collapse;
        }

        table td, table th {
            border: solid 1px;
            padding: 5px;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

@media print {
    #main {
        padding-bottom: 1em !important; /* The default padding of 6em is to=
o much for printouts */
    }

    body {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        font-size: 10pt;
        line-height: 1.2;
    }

    body, #full-height-container, #main, #page, #content, .has-personal-sid=
ebar #content {
        background: var(--ds-surface, #fff) !important;
        color: var(--ds-text, #000) !important;
        border: 0 !important;
        width: 100% !important;
        height: auto !important;
        min-height: auto !important;
        margin: 0 !important;
        padding: 0 !important;
        display: block !important;
    }

    a, a:link, a:visited, a:focus, a:hover, a:active {
        color: var(--ds-text, #000);
    }

    #content h1,
    #content h2,
    #content h3,
    #content h4,
    #content h5,
    #content h6 {
        font-family: Arial, Helvetica, FreeSans, sans-serif;
        page-break-after: avoid;
    }

    pre {
        font-family: Monaco, "Courier New", monospace;
    }

    #header,
    .aui-header-inner,
    #navigation,
    #sidebar,
    .sidebar,
    #personal-info-sidebar,
    .ia-fixed-sidebar,
    .page-actions,
    .navmenu,
    .ajs-menu-bar,
    .noprint,
    .inline-control-link,
    .inline-control-link a,
    a.show-labels-editor,
    .global-comment-actions,
    .comment-actions,
    .quick-comment-container,
    #addcomment {
        display: none !important;
    }

    /* CONF-28544 cannot print multiple pages in IE */
    #splitter-content {
        position: relative !important;
    }

    .comment .date::before {
        content: none !important; /* remove middot for print view */
    }

    h1.pagetitle img {
        height: auto;
        width: auto;
    }

    .print-only {
        display: block;
    }

    #footer {
        position: relative !important; /* CONF-17506 Place the footer at en=
d of the content */
        margin: 0;
        padding: 0;
        background: none;
        clear: both;
    }

    #poweredby {
        border-top: none;
        background: none;
    }

    #poweredby li.print-only {
        display: list-item;
        font-style: italic;
    }

    #poweredby li.noprint {
        display: none;
    }

    /* no width controls in print */
    .wiki-content .table-wrap,
    .wiki-content p,
    .panel .codeContent,
    .panel .codeContent pre,
    .image-wrap {
        overflow: visible !important;
    }

    /* TODO - should this work? */
    #children-section,
    #comments-section .comment,
    #comments-section .comment .comment-body,
    #comments-section .comment .comment-content,
    #comments-section .comment p {
        page-break-inside: avoid;
    }

    #page-children a {
        text-decoration: none;
    }

    /**
     hide twixies

     the specificity here is a hack because print styles
     are getting loaded before the base styles. */
    #comments-section.pageSection .section-header,
    #comments-section.pageSection .section-title,
    #children-section.pageSection .section-header,
    #children-section.pageSection .section-title,
    .children-show-hide {
        padding-left: 0;
        margin-left: 0;
    }

    .children-show-hide.icon {
        display: none;
    }

    /* personal sidebar */
    .has-personal-sidebar #content {
        margin-right: 0px;
    }

    .has-personal-sidebar #content .pageSection {
        margin-right: 0px;
    }

    .no-print, .no-print * {
        display: none !important;
    }
}
-->
    </style>
</head>
<body>
    <h1>Assignments - Python and Django Developer 1 year</h1>
    <div class=3D"Section1">
        <p><strong>Assignment 1: Building a REST API with Django (python, D=
jango)</strong></p>
<p>Your task is to build a simple REST API using Django. The API should all=
ow users to create, retrieve, update, and delete records of a "Product" mod=
el. Each product should have a name, description, price, and quantity.</p>
<p>Requirements:</p>
<ol start=3D"1">
<li><p>Create a new Django project.</p></li>
<li><p>Define a Django model named "Product" with the necessary fields.</p>=
</li>
<li><p>Implement API endpoints for the following operations:</p>
<ul>
<li><p>Retrieve a list of all products.</p></li>
<li><p>Create a new product.</p></li>
<li><p>Retrieve a specific product by its ID.</p></li>
<li><p>Update a product.</p></li>
<li><p>Delete a product.</p></li>
</ul></li>
<li><p>Ensure that the API follows RESTful principles and returns appropria=
te HTTP status codes.</p></li>
<li><p>Include proper validation for input data, such as required fields an=
d data types.</p></li>
<li><p>Implement pagination for the list of products, allowing for a maximu=
m of 10 products per page.</p></li>
</ol>
<p>Bonus:</p>
<ul>
<li><p>Implement authentication and authorization for the API using Django'=
s built-in authentication system or token-based authentication.</p></li>
<li><p>Write unit tests to ensure the functionality of the API endpoints.</=
p></li>
</ul>
<hr>
<p><strong>Assignment 2: Building a Web Application with Django and REST AP=
I Integration (python, Django)</strong></p>
<p>Your task is to build a web application using Django that integrates wit=
h an external REST API. The application should allow users to search for mo=
vies and display details about each movie retrieved from the API.</p>
<p>Requirements:</p>
<ol start=3D"1">
<li><p>Create a new Django project.</p></li>
<li><p>Set up a Django app for movie-related functionality.</p></li>
<li><p>Integrate with an external movie API of your choice (e.g., OMDB API,=
 TMDb API, etc.) to retrieve movie data.</p></li>
<li><p>Implement a search functionality that allows users to search for mov=
ies based on a keyword. (An API should be exposed for this)</p></li>
<li><p>Implement an API to rate a movie. This information should store in t=
he local database. API will take a movie name and rating in it=E2=80=99s bo=
dy.</p></li>
</ol>
<p>Bonus:</p>
<ul>
<li><p>Implement caching to reduce the number of API requests made when ret=
rieving movie data.</p></li>
<li><p>Add pagination to handle large search result sets.</p></li>
</ul>
<p>Remember to provide clear instructions on how to set up and run the appl=
ication, any API keys or configurations required, and any additional guidel=
ines or specifications you may have.</p>
<p></p>
<hr>
<p></p>
<p>Assignment 3: File Handling (<strong>python)</strong></p>
<p>Write a Python program that reads a text file named "input.txt" and perf=
orms the following tasks:</p>
<ol start=3D"1">
<li><p>Count the number of lines in the file.</p></li>
<li><p>Count the number of words in the file.</p></li>
<li><p>Count the number of occurrences of a specific word entered by the us=
er.</p></li>
<li><p>Create a new file named "output.txt" and write the contents of "inpu=
t.txt" in reverse order.</p></li>
</ol>
<p>input.txt</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">This is=
 a sample text file.
It contains multiple lines of text.
Each line serves as an example.
You can perform various operations on this file.
Count the number of lines or words.
Search for specific words or phrases.
Manipulate the content as needed.
Feel free to modify this file for testing purposes.
</pre>=20
</div>
</div>
<p>Note: Do not use any external library. </p>
<hr>
<p>Assignment 3: Data Analysis (<strong>python</strong>)</p>
<p>Write a Python program that analyzes a given dataset (in CSV format) nam=
ed "data.csv" and performs the following tasks:</p>
<ol start=3D"1">
<li><p>Calculate the average value of salary.</p></li>
<li><p>Find the minimum and maximum values of Age.</p></li>
<li><p>Count the number of rows that satisfy the condition that =E2=80=9Cag=
e is 28 and Gender is Female=E2=80=9D</p></li>
</ol>
<p></p>
<p>data.csv</p>
<div class=3D"code panel pdl" style=3D"border-width: 1px;">
<div class=3D"codeContent panelContent pdl">=20
<pre class=3D"syntaxhighlighter-pre" data-syntaxhighlighter-params=3D"brush=
: java; gutter: false; theme: Confluence" data-theme=3D"Confluence">Name,Ag=
e,Gender,Salary
John Smith,28,Male,50000
Emily Johnson,32,Female,65000
Michael Williams,45,Male,80000
Jessica Brown,38,Female,72000
David Davis,52,Male,95000
Samantha Anderson,29,Female,55000
Richard Thompson,34,Male,67000
Elizabeth Martin,41,Female,78000
Daniel Wilson,36,Male,70000
Sophia Clark,27,Female,52000
</pre>=20
</div>
</div>
<p>Note: Do not use any external library. </p>
<hr>
    </div>
</body>
</html>
------=_Part_26_1403884281.1685020268807--
